{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ActionUpdate from '@material-ui/icons/Update';\nimport { alpha } from '@material-ui/core/styles/colorManipulator';\nimport inflection from 'inflection';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate, useUpdateMany, useRefresh, useNotify, useUnselectAll, CRUD_UPDATE_MANY, useResourceContext } from 'ra-core';\nimport Confirm from '../layout/Confirm';\nimport Button from './Button';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    updateButton: {\n      color: theme.palette.error.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n}, {\n  name: 'RaBulkUpdateWithConfirmButton'\n});\nvar defaultIcon = React.createElement(ActionUpdate, null);\n\nvar BulkUpdateWithConfirmButton = function (props) {\n  var notify = useNotify();\n  var refresh = useRefresh();\n  var translate = useTranslate();\n  var unselectAll = useUnselectAll();\n  var resource = useResourceContext(props);\n  var classes = useStyles(props);\n\n  var _a = useState(false),\n      isOpen = _a[0],\n      setOpen = _a[1];\n\n  var basePath = props.basePath,\n      mutationMode = props.mutationMode,\n      classesOverride = props.classes,\n      _b = props.confirmTitle,\n      confirmTitle = _b === void 0 ? 'ra.message.bulk_update_title' : _b,\n      _c = props.confirmContent,\n      confirmContent = _c === void 0 ? 'ra.message.bulk_update_content' : _c,\n      data = props.data,\n      _d = props.icon,\n      icon = _d === void 0 ? defaultIcon : _d,\n      label = props.label,\n      onClick = props.onClick,\n      selectedIds = props.selectedIds,\n      _e = props.onSuccess,\n      onSuccess = _e === void 0 ? function () {\n    refresh();\n    notify('ra.notification.updated', {\n      type: 'info',\n      messageArgs: {\n        smart_count: selectedIds.length\n      }\n    });\n    unselectAll(resource);\n  } : _e,\n      _f = props.onFailure,\n      onFailure = _f === void 0 ? function (error) {\n    notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', {\n      type: 'warning',\n      messageArgs: {\n        _: typeof error === 'string' ? error : error && error.message ? error.message : undefined\n      }\n    });\n    setOpen(false);\n  } : _f,\n      rest = __rest(props, [\"basePath\", \"mutationMode\", \"classes\", \"confirmTitle\", \"confirmContent\", \"data\", \"icon\", \"label\", \"onClick\", \"selectedIds\", \"onSuccess\", \"onFailure\"]);\n\n  var _g = useUpdateMany(resource, selectedIds, data, {\n    action: CRUD_UPDATE_MANY,\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    mutationMode: mutationMode\n  }),\n      updateMany = _g[0],\n      loading = _g[1].loading;\n\n  var handleClick = function (e) {\n    setOpen(true);\n    e.stopPropagation();\n  };\n\n  var handleDialogClose = function () {\n    setOpen(false);\n  };\n\n  var handleUpdate = function (e) {\n    updateMany();\n\n    if (typeof onClick === 'function') {\n      onClick(e);\n    }\n  };\n\n  return React.createElement(Fragment, null, React.createElement(Button, __assign({\n    onClick: handleClick,\n    label: label,\n    className: classes.updateButton\n  }, sanitizeRestProps(rest)), icon), React.createElement(Confirm, {\n    isOpen: isOpen,\n    loading: loading,\n    title: confirmTitle,\n    content: confirmContent,\n    translateOptions: {\n      smart_count: selectedIds.length,\n      name: translate(\"resources.\" + resource + \".forcedCaseName\", {\n        smart_count: selectedIds.length,\n        _: inflection.humanize(translate(\"resources.\" + resource + \".name\", {\n          smart_count: selectedIds.length,\n          _: inflection.inflect(resource, selectedIds.length)\n        }), true)\n      })\n    },\n    onConfirm: handleUpdate,\n    onClose: handleDialogClose\n  }));\n};\n\nvar sanitizeRestProps = function (_a) {\n  var basePath = _a.basePath,\n      classes = _a.classes,\n      filterValues = _a.filterValues,\n      label = _a.label,\n      onSuccess = _a.onSuccess,\n      onFailure = _a.onFailure,\n      rest = __rest(_a, [\"basePath\", \"classes\", \"filterValues\", \"label\", \"onSuccess\", \"onFailure\"]);\n\n  return rest;\n};\n\nBulkUpdateWithConfirmButton.propTypes = {\n  basePath: PropTypes.string,\n  classes: PropTypes.object,\n  confirmTitle: PropTypes.string,\n  confirmContent: PropTypes.string,\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  icon: PropTypes.element,\n  data: PropTypes.any.isRequired,\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable'])\n};\nBulkUpdateWithConfirmButton.defaultProps = {\n  label: 'ra.action.update',\n  mutationMode: 'pessimistic'\n};\nexport default BulkUpdateWithConfirmButton;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/button/BulkUpdateWithConfirmButton.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","Fragment","useState","PropTypes","ActionUpdate","alpha","inflection","makeStyles","useTranslate","useUpdateMany","useRefresh","useNotify","useUnselectAll","CRUD_UPDATE_MANY","useResourceContext","Confirm","Button","useStyles","theme","updateButton","color","palette","error","main","backgroundColor","name","defaultIcon","createElement","BulkUpdateWithConfirmButton","props","notify","refresh","translate","unselectAll","resource","classes","_a","isOpen","setOpen","basePath","mutationMode","classesOverride","_b","confirmTitle","_c","confirmContent","data","_d","icon","label","onClick","selectedIds","_e","onSuccess","type","messageArgs","smart_count","_f","onFailure","message","_","undefined","rest","_g","action","updateMany","loading","handleClick","stopPropagation","handleDialogClose","handleUpdate","className","sanitizeRestProps","title","content","translateOptions","humanize","inflect","onConfirm","onClose","filterValues","propTypes","string","object","arrayOf","any","element","isRequired","oneOf","defaultProps"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ActionUpdate from '@material-ui/icons/Update';\nimport { alpha } from '@material-ui/core/styles/colorManipulator';\nimport inflection from 'inflection';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate, useUpdateMany, useRefresh, useNotify, useUnselectAll, CRUD_UPDATE_MANY, useResourceContext, } from 'ra-core';\nimport Confirm from '../layout/Confirm';\nimport Button from './Button';\nvar useStyles = makeStyles(function (theme) { return ({\n    updateButton: {\n        color: theme.palette.error.main,\n        '&:hover': {\n            backgroundColor: alpha(theme.palette.error.main, 0.12),\n            // Reset on mouse devices\n            '@media (hover: none)': {\n                backgroundColor: 'transparent',\n            },\n        },\n    },\n}); }, { name: 'RaBulkUpdateWithConfirmButton' });\nvar defaultIcon = React.createElement(ActionUpdate, null);\nvar BulkUpdateWithConfirmButton = function (props) {\n    var notify = useNotify();\n    var refresh = useRefresh();\n    var translate = useTranslate();\n    var unselectAll = useUnselectAll();\n    var resource = useResourceContext(props);\n    var classes = useStyles(props);\n    var _a = useState(false), isOpen = _a[0], setOpen = _a[1];\n    var basePath = props.basePath, mutationMode = props.mutationMode, classesOverride = props.classes, _b = props.confirmTitle, confirmTitle = _b === void 0 ? 'ra.message.bulk_update_title' : _b, _c = props.confirmContent, confirmContent = _c === void 0 ? 'ra.message.bulk_update_content' : _c, data = props.data, _d = props.icon, icon = _d === void 0 ? defaultIcon : _d, label = props.label, onClick = props.onClick, selectedIds = props.selectedIds, _e = props.onSuccess, onSuccess = _e === void 0 ? function () {\n        refresh();\n        notify('ra.notification.updated', {\n            type: 'info',\n            messageArgs: { smart_count: selectedIds.length },\n        });\n        unselectAll(resource);\n    } : _e, _f = props.onFailure, onFailure = _f === void 0 ? function (error) {\n        notify(typeof error === 'string'\n            ? error\n            : error.message || 'ra.notification.http_error', {\n            type: 'warning',\n            messageArgs: {\n                _: typeof error === 'string'\n                    ? error\n                    : error && error.message\n                        ? error.message\n                        : undefined,\n            },\n        });\n        setOpen(false);\n    } : _f, rest = __rest(props, [\"basePath\", \"mutationMode\", \"classes\", \"confirmTitle\", \"confirmContent\", \"data\", \"icon\", \"label\", \"onClick\", \"selectedIds\", \"onSuccess\", \"onFailure\"]);\n    var _g = useUpdateMany(resource, selectedIds, data, {\n        action: CRUD_UPDATE_MANY,\n        onSuccess: onSuccess,\n        onFailure: onFailure,\n        mutationMode: mutationMode,\n    }), updateMany = _g[0], loading = _g[1].loading;\n    var handleClick = function (e) {\n        setOpen(true);\n        e.stopPropagation();\n    };\n    var handleDialogClose = function () {\n        setOpen(false);\n    };\n    var handleUpdate = function (e) {\n        updateMany();\n        if (typeof onClick === 'function') {\n            onClick(e);\n        }\n    };\n    return (React.createElement(Fragment, null,\n        React.createElement(Button, __assign({ onClick: handleClick, label: label, className: classes.updateButton }, sanitizeRestProps(rest)), icon),\n        React.createElement(Confirm, { isOpen: isOpen, loading: loading, title: confirmTitle, content: confirmContent, translateOptions: {\n                smart_count: selectedIds.length,\n                name: translate(\"resources.\" + resource + \".forcedCaseName\", {\n                    smart_count: selectedIds.length,\n                    _: inflection.humanize(translate(\"resources.\" + resource + \".name\", {\n                        smart_count: selectedIds.length,\n                        _: inflection.inflect(resource, selectedIds.length),\n                    }), true),\n                }),\n            }, onConfirm: handleUpdate, onClose: handleDialogClose })));\n};\nvar sanitizeRestProps = function (_a) {\n    var basePath = _a.basePath, classes = _a.classes, filterValues = _a.filterValues, label = _a.label, onSuccess = _a.onSuccess, onFailure = _a.onFailure, rest = __rest(_a, [\"basePath\", \"classes\", \"filterValues\", \"label\", \"onSuccess\", \"onFailure\"]);\n    return rest;\n};\nBulkUpdateWithConfirmButton.propTypes = {\n    basePath: PropTypes.string,\n    classes: PropTypes.object,\n    confirmTitle: PropTypes.string,\n    confirmContent: PropTypes.string,\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    icon: PropTypes.element,\n    data: PropTypes.any.isRequired,\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n};\nBulkUpdateWithConfirmButton.defaultProps = {\n    label: 'ra.action.update',\n    mutationMode: 'pessimistic',\n};\nexport default BulkUpdateWithConfirmButton;\n"]},"metadata":{},"sourceType":"module"}